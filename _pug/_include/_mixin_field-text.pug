//- Все примеси в этом файле должны начинаться c имени блока (field-text)
mixin field-text(props)
  //- Принимает:
  //-   props {
  //-     title: ''         {string} - текст с названием (выводится над полем)
  //-     hasJs: false      {bool}   - используется js или нет
  //-     isTextarea: false {bool}   - флаг input/textarea
  //-     hasError: false   {bool}   - показаль ошибку или нет
  //-     helpText: ''      {string} - пояснение под полем
  //-     mods: ''          {string} - модификаторы блока
  //-     val: ''           {string} - текст в поле
  //-     attrs:            {object} - любые атрибуты для input/textarea
  //-       type:           {string}
  //-       placeholder:    {string}
  //- Вызов:
        +field-text({
          title: 'Заголовок',
          hasJs: true,
          isTextarea: false,
          isRequired: false,
          hasError: false,
          helpText: 'Текст ошибки или подсказка',
          mods: '',
          val: '',
          attrs: {
            name: 'text',
            placeholder: ''
          }
        })
  -
    if(typeof(props) === 'undefined') {
      var props = {};
    }
    var allMods = '';
    if(typeof(props.mods) !== 'undefined' && props.mods) {
      var modsList = props.mods.split(',');
      for (var i = 0; i < modsList.length; i++) {
        allMods = allMods + ' --' + modsList[i].trim();
      }
    }
  label.field-text(class=allMods, class=(typeof(props.hasError) !== 'undefined' && props.hasError) ? 'has-error' : '', class=(typeof(props.hasJs) !== 'undefined' && props.hasJs) ? 'j-field-text' : '')&attributes(attributes)
    if(typeof(props.hasJs) !== 'undefined' && props.hasJs)
      if(typeof(props.isTextarea) !== 'undefined' && props.isTextarea)
        textarea.field-text__input(class=(typeof(props.hasJs) !== 'undefined' && props.hasJs) ? 'css-input' : '', aria-invalid=(typeof(props.hasError) !== 'undefined' && props.hasError) ? 'true' : 'false')&attributes(props.attrs)= props.val
      else
        input.field-text__input(class=(typeof(props.hasJs) !== 'undefined' && props.hasJs) ? 'css-input' : '', type=(typeof(props.attrs) !== 'undefined' && props.attrs.type) ? props.attrs.type : 'text', value=props.val, aria-invalid=(typeof(props.hasError) !== 'undefined' && props.hasError) ? 'true' : 'false')&attributes(props.attrs)
      if(typeof(props.title) !== 'undefined' && props.title)
        span.field-text__name(class=(typeof(props.hasJs) !== 'undefined' && props.hasJs) ? 'css-label' : '')!= props.title
          if(typeof(props.isRequired) !== 'undefined' && props.isRequired)
            sup *
    else
      if(typeof(props.title) !== 'undefined' && props.title)
        span.field-text__name(class=(typeof(props.hasJs) !== 'undefined' && props.hasJs) ? 'css-label' : '')!= props.title
          if(typeof(props.isRequired) !== 'undefined' && props.isRequired)
            sup *
      span.field-text__input-wrap
        if(typeof(props.isTextarea) !== 'undefined' && props.isTextarea)
          textarea.field-text__input(class=(typeof(props.hasJs) !== 'undefined' && props.hasJs) ? 'css-input' : '', aria-invalid=(typeof(props.hasError) !== 'undefined' && props.hasError) ? 'true' : 'false')&attributes(props.attrs)= props.val
        else
          input.field-text__input(class=(typeof(props.hasJs) !== 'undefined' && props.hasJs) ? 'css-input' : '', type=(typeof(props.attrs) !== 'undefined' && props.attrs.type) ? props.attrs.type : 'text', value=props.val, aria-invalid=(typeof(props.hasError) !== 'undefined' && props.hasError) ? 'true' : 'false')&attributes(props.attrs)
    if(typeof(props.helpText) !== 'undefined' && props.helpText)
      span.field-text__help-text(style="display: none")!= props.helpText
    else
      span.field-text__help-text(style="display: none")!= 'Повідомлення про помилку містить спосіб виправлення, наприклад, зразок даних в очікуваному форматі'
    block